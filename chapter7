function startLevel(map) {
map.placePlayer(0, 12);
var player = map.getPlayer();
 
map.placeObject(5, 12, 'phone');
 
// The function phone lets you call arbitrary functions,
// as defined by player.setPhoneCallback() below.
// The function phone callback is bound to Q or Ctrl-6.
player.setPhoneCallback(function () {

// ok,ok, last chapter was sad , i will protect your eyes... as far as i can.
if(map.getPlayer().getColor() == '#00f')
map.getPlayer().setColor('#0f0');
else if(map.getPlayer().getColor() == '#0f0')
map.getPlayer().setColor('#f00');
else if(map.getPlayer().getColor() == '#f00')
map.getPlayer().setColor('#ff0');
else if(map.getPlayer().getColor() == '#ff0')
map.getPlayer().setColor('#00f');// for the lulz
 
 
});
 
 
map.defineObject('redLock', {
symbol: '☒',
color: "#f00", // red
impassable: function(player, object) {
return player.getColor() != object.color;
}
});
 
map.defineObject('greenLock', {
symbol: '☒',
color: "#0f0", // green
impassable: function(player, object) {
return player.getColor() != object.color;
}
});
 
map.defineObject('yellowLock', {
symbol: '☒',
color: "#ff0", // yellow
impassable: function(player, object) {
return player.getColor() != object.color;
}
});
 
for (var x = 20; x <= 40; x++) {
map.placeObject(x, 11, 'block');
map.placeObject(x, 13, 'block');
}
map.placeObject(22, 12, 'greenLock');
map.placeObject(25, 12, 'redLock');
map.placeObject(28, 12, 'yellowLock');
map.placeObject(31, 12, 'greenLock');
map.placeObject(34, 12, 'redLock');
map.placeObject(37, 12, 'yellowLock');
map.placeObject(40, 12, 'exit');
for (var y = 0; y < map.getHeight(); y++) {
if (y != 12) {
map.placeObject(40, y, 'block');
}
for (var x = 41; x < map.getWidth(); x++) {
map.setSquareColor(x, y, '#080');
}
}
}
 
function validateLevel(map) {
map.validateExactlyXManyObjects(1, 'exit');
}
